# Generated by Django 5.2.6 on 2025-10-24 11:18

import django.core.validators
import django.db.models.deletion
import multiselectfield.db.fields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='InitiativePlanning',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('initiative_focus_area', models.CharField(max_length=100)),
                ('initiative_dimension', models.CharField(max_length=100)),
                ('initiative_name', models.CharField(max_length=100)),
                ('description', models.TextField(max_length=100)),
                ('total_budget_planned', models.DecimalField(decimal_places=2, default=0.0, help_text='Planned budget for the project, programme or action', max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('total_hr_planned', models.DecimalField(decimal_places=2, default=0, help_text='Planned effort in person-days for this initiative', max_digits=8, verbose_name='Planned Human Resources (Person-Days)')),
                ('priority', models.CharField(choices=[('Very High', 'Very High'), ('High', 'High'), ('Medium', 'Medium'), ('Low', 'Low'), ('Very Low', 'Very Low')], default='Medium', max_length=10)),
                ('impact', models.CharField(choices=[('Very High', 'Very High'), ('High', 'High'), ('Medium', 'Medium'), ('Low', 'Low'), ('Very Low', 'Very Low')], default='Medium', max_length=10)),
                ('likelihood', models.CharField(choices=[('Very High', 'Very High'), ('High', 'High'), ('Medium', 'Medium'), ('Low', 'Low'), ('Very Low', 'Very Low')], default='Medium', max_length=10)),
                ('risk_level', models.CharField(choices=[('Very High', 'Very High'), ('High', 'High'), ('Medium', 'Medium'), ('Low', 'Low'), ('Very Low', 'Very Low')], default='Medium', max_length=10)),
                ('baseline_status', models.CharField(choices=[('Very High', 'Very High'), ('High', 'High'), ('Medium', 'Medium'), ('Low', 'Low'), ('Very Low', 'Very Low')], default='Medium', max_length=10)),
                ('target_status', models.CharField(choices=[('Very High', 'Very High'), ('High', 'High'), ('Medium', 'Medium'), ('Low', 'Low'), ('Very Low', 'Very Low')], default='High', max_length=10)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationalProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization_name', models.CharField(max_length=80)),
                ('organization_address', models.CharField(max_length=80)),
                ('employer_tin', models.CharField(max_length=90, verbose_name='Employer TIN')),
                ('organization_type', models.CharField(choices=[('sole_proprietorship', 'Sole Proprietorship'), ('partnership', 'Partnership'), ('corporation', 'Corporation'), ('joint_venture', 'Joint Venture'), ('cooperative', 'Cooperative'), ('non_profit', 'Non Profit'), ('non_governmental', 'Non Governmental'), ('governmental', 'Governmental'), ('other', 'Other')], max_length=70)),
                ('sector_name', models.CharField(choices=[('education', 'Education'), ('healthcare', 'Healthcare & Medical Services'), ('information_technology', 'Information Technology & Digital Services'), ('finance_banking', 'Finance, Banking & Insurance'), ('agriculture', 'Agriculture & Agribusiness'), ('manufacturing', 'Manufacturing & Industry'), ('energy_utilities', 'Energy & Utilities'), ('environment_sustainability', 'Environment & Sustainability'), ('transport_logistics', 'Transportation & Logistics'), ('tourism_hospitality', 'Tourism, Travel & Hospitality'), ('construction_real_estate', 'Construction & Real Estate'), ('telecommunications', 'Telecommunications'), ('research_development', 'Research & Development'), ('public_sector', 'Government & Public Administration'), ('creative_media', 'Creative Arts, Media & Entertainment'), ('retail_wholesale', 'Retail & Wholesale Trade'), ('ecommerce', 'E-commerce & Online Retail'), ('professional_services', 'Professional & Business Services'), ('hospitality_food', 'Hospitality & Food Services'), ('mining_resources', 'Mining, Oil & Natural Resources')], max_length=50)),
                ('contact_personnel', models.CharField(max_length=90)),
            ],
            options={
                'verbose_name': 'Organizational Profile',
                'verbose_name_plural': '               Organizational Profile',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='InitiativeResourceItemPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resource_type', models.CharField(choices=[('Person_hours', 'Person hours'), ('Equipment', 'Equipment'), ('Material', 'Material'), ('hr', 'HR'), ('Budget', 'Budget'), ('Other', 'Other')], default='Other', max_length=50)),
                ('resource_name', models.CharField(max_length=100)),
                ('resource_required', models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('initiative_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resource_item_plans', to='management_project.initiativeplanning')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='management_project.organizationalprofile')),
            ],
        ),
        migrations.CreateModel(
            name='InitiativeResourceItemReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resource_used', models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('report_date', models.DateField(auto_now_add=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('initiative_resource_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='management_project.initiativeresourceitemplan')),
            ],
        ),
        migrations.CreateModel(
            name='Mission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mission_statement', models.CharField(max_length=500)),
                ('organization_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='management_project.organizationalprofile')),
            ],
        ),
        migrations.CreateModel(
            name='InitiativeReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_date', models.DateField(auto_now_add=True)),
                ('total_budget_spent', models.DecimalField(decimal_places=2, default=0, help_text='Amount spent so far', max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('total_actual_hr', models.DecimalField(decimal_places=2, default=0, help_text='The total human resource effort actually used in person-days for this initiative', max_digits=8, verbose_name='Actual HR (Person-Days)')),
                ('achieved_status', models.CharField(choices=[('Very High', 'Very High'), ('High', 'High'), ('Medium', 'Medium'), ('Low', 'Low'), ('Very Low', 'Very Low')], default='Medium', max_length=10)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('initiative_planning', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='management_project.initiativeplanning')),
                ('organization_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='management_project.organizationalprofile')),
            ],
        ),
        migrations.AddField(
            model_name='initiativeplanning',
            name='organization_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='management_project.organizationalprofile'),
        ),
        migrations.CreateModel(
            name='OrganizationInvitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('role', models.CharField(choices=[('editor', 'Editor'), ('viewer', 'Viewer')], default='viewer', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('cancelled', 'Cancelled')], default='pending', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('responded_at', models.DateTimeField(blank=True, null=True)),
                ('message', models.TextField(blank=True, help_text='Optional message to the invitee', null=True)),
                ('token', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('invited_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('organization_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitations', to='management_project.organizationalprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Stakeholder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stakeholder_code', models.CharField(blank=True, max_length=50, unique=True)),
                ('stakeholder_name', models.CharField(help_text='Stakeholder name or organization', max_length=200)),
                ('stakeholder_type', models.CharField(choices=[('internal', 'Internal'), ('external', 'External'), ('interface', 'Interface')], max_length=20)),
                ('stakeholder_category', models.CharField(choices=[('strategic', 'Strategic'), ('operational', 'Operational'), ('tactical', 'Tactical'), ('influencer', 'Influencer'), ('beneficiary', 'Beneficiary')], default='operational', max_length=20)),
                ('role', multiselectfield.db.fields.MultiSelectField(choices=[('owner', 'Owner'), ('board_member', 'Board Member'), ('ceo', 'CEO'), ('executive', 'Executive'), ('director', 'Director'), ('senior_manager', 'Senior Manager'), ('manager', 'Manager'), ('team_lead', 'Team Lead'), ('supervisor', 'Supervisor'), ('department_head', 'Department Head'), ('branch_manager', 'Branch Manager'), ('employee', 'Employee'), ('contractor', 'Contractor'), ('intern', 'Intern'), ('volunteer', 'Volunteer'), ('finance', 'Finance'), ('hr', 'Human Resources'), ('it', 'IT Support'), ('developer', 'Developer'), ('designer', 'Designer'), ('qa', 'Quality Assurance'), ('sales', 'Sales'), ('marketing', 'Marketing'), ('operations', 'Operations'), ('logistics', 'Logistics'), ('legal', 'Legal Counsel'), ('compliance', 'Compliance Officer'), ('project_manager', 'Project Manager'), ('product_owner', 'Product Owner'), ('scrum_master', 'Scrum Master'), ('business_analyst', 'Business Analyst'), ('trainer', 'Trainer'), ('mentor', 'Mentor'), ('customer', 'Customer'), ('supplier', 'Supplier'), ('partner', 'Partner'), ('investor', 'Investor'), ('funder', 'Funder'), ('regulator', 'Regulator'), ('government_official', 'Government Official'), ('auditor', 'Auditor'), ('consultant', 'Consultant'), ('advisor', 'Advisor'), ('researcher', 'Researcher'), ('media', 'Media'), ('community', 'Community'), ('other', 'Other')], default=['employee'], help_text='Select one or more roles', max_length=500)),
                ('primary_role', models.CharField(blank=True, choices=[('owner', 'Owner'), ('board_member', 'Board Member'), ('ceo', 'CEO'), ('executive', 'Executive'), ('director', 'Director'), ('senior_manager', 'Senior Manager'), ('manager', 'Manager'), ('team_lead', 'Team Lead'), ('supervisor', 'Supervisor'), ('department_head', 'Department Head'), ('branch_manager', 'Branch Manager'), ('employee', 'Employee'), ('contractor', 'Contractor'), ('intern', 'Intern'), ('volunteer', 'Volunteer'), ('finance', 'Finance'), ('hr', 'Human Resources'), ('it', 'IT Support'), ('developer', 'Developer'), ('designer', 'Designer'), ('qa', 'Quality Assurance'), ('sales', 'Sales'), ('marketing', 'Marketing'), ('operations', 'Operations'), ('logistics', 'Logistics'), ('legal', 'Legal Counsel'), ('compliance', 'Compliance Officer'), ('project_manager', 'Project Manager'), ('product_owner', 'Product Owner'), ('scrum_master', 'Scrum Master'), ('business_analyst', 'Business Analyst'), ('trainer', 'Trainer'), ('mentor', 'Mentor'), ('customer', 'Customer'), ('supplier', 'Supplier'), ('partner', 'Partner'), ('investor', 'Investor'), ('funder', 'Funder'), ('regulator', 'Regulator'), ('government_official', 'Government Official'), ('auditor', 'Auditor'), ('consultant', 'Consultant'), ('advisor', 'Advisor'), ('researcher', 'Researcher'), ('media', 'Media'), ('community', 'Community'), ('other', 'Other')], help_text='Primary role for reporting and analysis', max_length=50, null=True)),
                ('impact_level', models.CharField(choices=[('very_low', 'Very Low'), ('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('very_high', 'Very High')], default='medium', max_length=20)),
                ('interest_level', models.CharField(choices=[('very_low', 'Very Low'), ('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('very_high', 'Very High')], default='medium', max_length=20)),
                ('influence_score', models.CharField(choices=[('very_low', 'Very Low'), ('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('very_high', 'Very High')], default='medium', max_length=20)),
                ('risk_level', models.CharField(choices=[('very_low', 'Very Low'), ('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('very_high', 'Very High')], default='medium', max_length=20)),
                ('contribution_score', models.CharField(choices=[('very_low', 'Very Low'), ('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('very_high', 'Very High')], default='medium', max_length=20)),
                ('priority', models.CharField(choices=[('very_low', 'Very Low'), ('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('very_high', 'Very High')], default='medium', max_length=20)),
                ('satisfaction_level', models.CharField(choices=[('very_low', 'Very Low'), ('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('very_high', 'Very High')], default='medium', max_length=20)),
                ('engagement_strategy', multiselectfield.db.fields.MultiSelectField(choices=[('monitor', 'Monitor'), ('inform', 'Inform'), ('consult', 'Consult'), ('involve', 'Involve'), ('collaborate', 'Collaborate'), ('empower', 'Empower')], default=['inform'], help_text='Select one or more engagement strategies', max_length=200)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('contact_info', models.CharField(blank=True, max_length=200, null=True)),
                ('department', models.CharField(blank=True, max_length=100, null=True)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('relationship_status', models.CharField(choices=[('new', 'New'), ('active', 'Active'), ('inactive', 'Inactive'), ('challenged', 'Challenged'), ('terminated', 'Terminated')], default='new', max_length=20)),
                ('last_engagement_date', models.DateField(blank=True, null=True)),
                ('next_engagement_date', models.DateField(blank=True, null=True)),
                ('engagement_priority_score', models.DecimalField(decimal_places=1, default=0.0, max_digits=3)),
                ('is_key_stakeholder', models.BooleanField(default=False)),
                ('requires_attention', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True)),
                ('organization_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='stakeholders', to='management_project.organizationalprofile')),
            ],
            options={
                'verbose_name': 'Stakeholder',
                'verbose_name_plural': 'Stakeholders',
                'ordering': ['-engagement_priority_score', 'stakeholder_name'],
            },
        ),
        migrations.CreateModel(
            name='StrategicCycle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Descriptive name for the strategic cycle', max_length=100)),
                ('time_horizon', models.CharField(choices=[('10 years', '10 years'), ('5 years', '5 years'), ('3 years', '3 years'), ('2 years', '2 years'), ('1 year', '1 year'), ('6 months', '6 months'), ('Quarterly', 'Quarterly'), ('Monthly', 'Monthly')], max_length=20)),
                ('time_horizon_type', models.CharField(choices=[('Long Term', 'Long Term'), ('Medium Term', 'Medium Term'), ('Short Term', 'Short Term')], max_length=20)),
                ('start_date', models.DateField(help_text='Exact start date of the strategic cycle')),
                ('end_date', models.DateField(help_text='Exact end date of the strategic cycle / report date')),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('organization_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='strategic_cycles', to='management_project.organizationalprofile')),
            ],
            options={
                'verbose_name': 'Strategic Cycle',
                'verbose_name_plural': 'Strategic Cycles',
                'ordering': ['start_date', '-id'],
            },
        ),
        migrations.CreateModel(
            name='StrategicActionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indicator_type', models.CharField(choices=[('Lead', 'Lead'), ('Lagg', 'Lagg')], max_length=10)),
                ('direction_of_change', models.CharField(choices=[('Increasing', 'Increasing'), ('Decreasing', 'Decreasing')], max_length=10)),
                ('baseline', models.DecimalField(decimal_places=2, max_digits=22)),
                ('target', models.DecimalField(decimal_places=2, max_digits=22)),
                ('improvement_needed', models.DecimalField(blank=True, decimal_places=2, max_digits=22, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('on_hold', 'On Hold'), ('cancelled', 'Cancelled')], default='pending', help_text='Current status of the strategic plan', max_length=20)),
                ('weight', models.DecimalField(decimal_places=2, default=100, help_text='Weight of this Action Plan KPI relative to other KPI per strategic cycle', max_digits=5)),
                ('organization_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='management_project.organizationalprofile')),
                ('responsible_bodies', models.ManyToManyField(blank=True, related_name='action_plans', to='management_project.stakeholder')),
                ('strategic_cycle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='action_plans', to='management_project.strategiccycle')),
            ],
            options={
                'verbose_name': 'Strategic Action Plan',
                'verbose_name_plural': 'Strategic Action Plans',
                'ordering': ['strategic_cycle__start_date', '-id'],
            },
        ),
        migrations.CreateModel(
            name='RiskManagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('risk_category', models.CharField(help_text='Select or define the risk category.', max_length=100)),
                ('risk_name', models.CharField(help_text='Enter a descriptive name for the risk.', max_length=150, unique=True)),
                ('mitigation_action', models.CharField(blank=True, help_text='Suggested or automatic mitigation action.', max_length=255)),
                ('likelihood', models.CharField(choices=[('very_low', 'Very Low'), ('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('very_high', 'Very High')], default='medium', max_length=15)),
                ('impact', models.CharField(choices=[('very_low', 'Very Low'), ('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('very_high', 'Very High')], default='medium', max_length=15)),
                ('severity_score', models.PositiveIntegerField(default=0)),
                ('status', models.CharField(choices=[('identified', 'Identified'), ('mitigated', 'Mitigated'), ('closed', 'Closed')], default='identified', max_length=15)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now=True)),
                ('organization_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='management_project.organizationalprofile')),
                ('strategic_cycle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management_project.strategiccycle')),
            ],
            options={
                'verbose_name': 'Risk Management Entry',
                'verbose_name_plural': 'Risk Management Entries',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StrategicReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('achievement', models.DecimalField(decimal_places=2, default=0, max_digits=22)),
                ('percent_achieved', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('variance', models.DecimalField(decimal_places=2, default=0, max_digits=22)),
                ('weighted_score', models.DecimalField(decimal_places=2, default=0, max_digits=22)),
                ('data_source', models.CharField(blank=True, max_length=200, null=True)),
                ('data_collector', models.CharField(blank=True, max_length=200, null=True)),
                ('progress_summary', models.TextField(blank=True, null=True)),
                ('performance_summary', models.TextField(blank=True, null=True)),
                ('challenges', models.TextField(blank=True, null=True)),
                ('successes', models.TextField(blank=True, null=True)),
                ('lessons_learned', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('on_hold', 'On Hold'), ('cancelled', 'Cancelled')], default='pending', help_text='Current status of the strategic plan', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('action_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='management_project.strategicactionplan')),
                ('organization_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='management_project.organizationalprofile')),
            ],
            options={
                'verbose_name': 'Strategic Report',
                'verbose_name_plural': 'Strategic Reports',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StrategyHierarchy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('strategic_perspective', models.CharField(max_length=100)),
                ('focus_area', models.CharField(max_length=100)),
                ('objective', models.CharField(max_length=100)),
                ('kpi', models.CharField(max_length=100, verbose_name='Key Performance Indicator')),
                ('formula', models.CharField(blank=True, max_length=100)),
                ('organization_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='management_project.organizationalprofile')),
            ],
        ),
        migrations.AddField(
            model_name='strategicactionplan',
            name='strategy_hierarchy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='action_plans', to='management_project.strategyhierarchy'),
        ),
        migrations.AddField(
            model_name='stakeholder',
            name='aligned_objectives',
            field=models.ManyToManyField(blank=True, related_name='stakeholders', to='management_project.strategyhierarchy'),
        ),
        migrations.AddField(
            model_name='initiativeplanning',
            name='aligned_objectives',
            field=models.ManyToManyField(blank=True, help_text='Optional: Which strategic objectives does this initiative_planning support?', related_name='supporting_initiatives', to='management_project.strategyhierarchy'),
        ),
        migrations.CreateModel(
            name='SwotAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('swot_type', models.CharField(choices=[('Strength', 'Strength'), ('Weakness', 'Weakness'), ('Opportunity', 'Opportunity'), ('Threat', 'Threat')], max_length=20)),
                ('swot_pillar', models.CharField(max_length=100)),
                ('swot_factor', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('priority', models.CharField(choices=[('Very High', 'Very High'), ('High', 'High'), ('Medium', 'Medium'), ('Low', 'Low'), ('Very Low', 'Very Low')], default='Medium', max_length=20)),
                ('impact', models.CharField(choices=[('Very High', 'Very High'), ('High', 'High'), ('Medium', 'Medium'), ('Low', 'Low'), ('Very Low', 'Very Low')], default='Medium', max_length=20)),
                ('likelihood', models.CharField(blank=True, choices=[('Almost Certain', 'Almost Certain'), ('Likely', 'Likely'), ('Possible', 'Possible'), ('Unlikely', 'Unlikely'), ('Rare', 'Rare')], max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organization_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='management_project.organizationalprofile')),
            ],
            options={
                'ordering': ['swot_type', 'priority', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SwotReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('swot_type', models.CharField(choices=[('Strength', 'Strength'), ('Weakness', 'Weakness'), ('Opportunity', 'Opportunity'), ('Threat', 'Threat')], max_length=20)),
                ('swot_pillar', models.CharField(max_length=100)),
                ('swot_factor', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('priority', models.CharField(choices=[('Very High', 'Very High'), ('High', 'High'), ('Medium', 'Medium'), ('Low', 'Low'), ('Very Low', 'Very Low')], default='Medium', max_length=20)),
                ('impact', models.CharField(choices=[('Very High', 'Very High'), ('High', 'High'), ('Medium', 'Medium'), ('Low', 'Low'), ('Very Low', 'Very Low')], default='Medium', max_length=20)),
                ('likelihood', models.CharField(blank=True, choices=[('Almost Certain', 'Almost Certain'), ('Likely', 'Likely'), ('Possible', 'Possible'), ('Unlikely', 'Unlikely'), ('Rare', 'Rare')], max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organization_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='management_project.organizationalprofile')),
                ('strategic_report_period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management_project.strategicreport')),
            ],
            options={
                'ordering': ['swot_type', 'priority', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Values',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('values', models.CharField(choices=[('integrity', 'Integrity'), ('respect', 'Respect'), ('empathy', 'Empathy'), ('collaboration', 'Collaboration'), ('excellence', 'Excellence'), ('adaptability', 'Adaptability'), ('diversity_inclusion', 'Diversity & Inclusion'), ('courage', 'Courage'), ('humility', 'Humility'), ('resilience', 'Resilience'), ('accountability', 'Accountability'), ('learning_mindset', 'Continuous Learning'), ('customer_focus', 'Customer Focus'), ('trustworthiness', 'Trustworthiness'), ('quality', 'Quality'), ('responsiveness', 'Responsiveness'), ('fairness', 'Fairness'), ('loyalty', 'Loyalty'), ('service_orientation', 'Service Orientation'), ('customer_innovation', 'Customer-Centric Innovation'), ('sustainability', 'Sustainability'), ('responsibility', 'Responsibility'), ('ethics', 'Ethics'), ('transparency', 'Transparency'), ('equity', 'Equity'), ('community_focus', 'Community Focus'), ('environmental_stewardship', 'Environmental Stewardship'), ('social_responsibility', 'Social Responsibility'), ('strategic_thinking', 'Strategic Thinking'), ('vision', 'Vision'), ('integrity_leadership', 'Integrity in Leadership'), ('collaboration_governance', 'Collaboration'), ('risk_management', 'Risk Management'), ('accountability_governance', 'Accountability'), ('long_term_orientation', 'Long-Term Orientation'), ('innovation', 'Innovation'), ('responsible_tech_use', 'Responsible Use of Technology'), ('digital_adaptability', 'Digital Adaptability'), ('data_driven', 'Data-Driven Decision Making'), ('tech_learning', 'Continuous Tech Learning'), ('automation_ethics', 'Ethical Automation'), ('prudence', 'Prudence'), ('financial_responsibility', 'Financial Responsibility'), ('integrity_finance', 'Integrity'), ('risk_awareness', 'Risk Awareness'), ('transparency_finance', 'Transparency'), ('compliance', 'Regulatory Compliance'), ('budget_discipline', 'Budget Discipline'), ('cost_efficiency', 'Cost Efficiency'), ('creativity', 'Creativity'), ('entrepreneurial_mindset', 'Entrepreneurial Mindset'), ('agility', 'Agility'), ('continuous_improvement', 'Continuous Improvement'), ('visionary', 'Visionary Thinking'), ('opportunity_seeking', 'Opportunity Seeking'), ('collaboration_innovation', 'Collaborative Innovation'), ('efficiency', 'Efficiency'), ('quality_focus', 'Quality Focus'), ('process_excellence', 'Process Excellence'), ('customer_satisfaction', 'Customer Satisfaction'), ('safety', 'Safety'), ('reliability', 'Reliability'), ('lean_practices', 'Lean Practices'), ('brand_integrity', 'Brand Integrity'), ('reliability_reputation', 'Reliability'), ('trust', 'Trust'), ('social_image', 'Social Image'), ('authenticity', 'Authenticity'), ('emotional_connection', 'Emotional Connection'), ('community_engagement', 'Community Engagement'), ('volunteering', 'Volunteering'), ('philanthropy', 'Philanthropy'), ('diversity_advocacy', 'Diversity Advocacy'), ('social_impact', 'Social Impact'), ('education_support', 'Education Support')], max_length=50, unique=True)),
                ('organization_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='management_project.organizationalprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Vision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vision_statement', models.CharField(max_length=500)),
                ('organization_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='management_project.organizationalprofile')),
            ],
        ),
        migrations.AddIndex(
            model_name='stakeholder',
            index=models.Index(fields=['stakeholder_type', 'engagement_priority_score'], name='management__stakeho_0bee14_idx'),
        ),
        migrations.AddIndex(
            model_name='stakeholder',
            index=models.Index(fields=['organization_name', 'risk_level'], name='management__organiz_8dd1e4_idx'),
        ),
        migrations.AddIndex(
            model_name='stakeholder',
            index=models.Index(fields=['stakeholder_code'], name='management__stakeho_1276ed_idx'),
        ),
    ]
